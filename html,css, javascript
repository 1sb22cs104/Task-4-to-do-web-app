<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>To-Do App</title>
  <style>
    body {
      font-family: Arial;
      background: #f4f4f4;
      padding: 2rem;
      display: flex;
      justify-content: center;
    }
    .todo-container {
      background: white;
      padding: 2rem;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
      width: 100%;
      max-width: 500px;
    }
    input, button {
      padding: 0.5rem;
      margin: 0.25rem 0;
      width: 100%;
      font-size: 1rem;
    }
    ul {
      list-style: none;
      padding: 0;
      margin-top: 1rem;
    }
    li {
      padding: 0.5rem;
      border-bottom: 1px solid #ccc;
      display: flex;
      flex-direction: column;
      margin-bottom: 0.5rem;
    }
    .task-actions {
      display: flex;
      justify-content: space-between;
      margin-top: 0.5rem;
    }
    .completed {
      text-decoration: line-through;
      color: gray;
    }
  </style>
</head>
<body>
  <div class="todo-container">
    <h2>To-Do List</h2>
    <input type="text" id="task-input" placeholder="Task name" />
    <input type="date" id="task-date" />
    <input type="time" id="task-time" />
    <button id="add-task-btn">Add Task</button>
    <ul id="task-list"></ul>
  </div>

  <script>
    const taskInput = document.getElementById('task-input');
    const taskDate = document.getElementById('task-date');
    const taskTime = document.getElementById('task-time');
    const addTaskBtn = document.getElementById('add-task-btn');
    const taskList = document.getElementById('task-list');

    let tasks = [];

    function renderTasks() {
      taskList.innerHTML = '';
      tasks.forEach((task, index) => {
        const li = document.createElement('li');
        li.className = task.completed ? 'completed' : '';

        const taskText = document.createElement('span');
        taskText.textContent = `${task.title} (Due: ${task.date || 'N/A'} ${task.time || ''})`;

        const actions = document.createElement('div');
        actions.className = 'task-actions';

        const completeBtn = document.createElement('button');
        completeBtn.textContent = task.completed ? 'Undo' : 'Complete';
        completeBtn.onclick = () => {
          task.completed = !task.completed;
          renderTasks();
        };

        const editBtn = document.createElement('button');
        editBtn.textContent = 'Edit';
        editBtn.onclick = () => editTask(index);

        const deleteBtn = document.createElement('button');
        deleteBtn.textContent = 'Delete';
        deleteBtn.onclick = () => {
          tasks.splice(index, 1);
          renderTasks();
        };

        actions.append(completeBtn, editBtn, deleteBtn);
        li.append(taskText, actions);
        taskList.appendChild(li);
      });
    }

    function addTask() {
      const title = taskInput.value.trim();
      if (!title) return alert('Please enter a task');

      tasks.push({
        title,
        date: taskDate.value,
        time: taskTime.value,
        completed: false
      });

      taskInput.value = '';
      taskDate.value = '';
      taskTime.value = '';
      renderTasks();
    }

    function editTask(index) {
      const task = tasks[index];
      const newTitle = prompt('Edit task name:', task.title);
      const newDate = prompt('Edit date:', task.date);
      const newTime = prompt('Edit time:', task.time);

      if (newTitle !== null) task.title = newTitle;
      if (newDate !== null) task.date = newDate;
      if (newTime !== null) task.time = newTime;

      renderTasks();
    }

    addTaskBtn.addEventListener('click', addTask);
  </script>
</body>
</html>
